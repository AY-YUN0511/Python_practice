# https://leetcode.com/problems/keys-and-rooms?envType=study-plan-v2&envId=leetcode-75
# 841. Keys and Rooms

class Solution:
    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:
        visited = [0] * len(rooms) # 방문했는지 확인할 array형성. 0으로 initialize 방문하면 1로 변경할 예정
        
        visited[0] = 1 #일단 하나 방문
        
        stack = [0]  #key를 얻게되면 저장할 stack 형성

        # DFS
        while stack:
            current_room = stack.pop()  #stack의 가장 앞에 있는 방을 방문
            for i in rooms[current_room]:
                if not visited[i]:
                    visited[i] = 1  # 방문하지 않았다면 방문하고 1로 변경
                    stack.append(i)   #stack에 넣어준다 

        for i in range(len(rooms)):
            if visited[i] == 0:
                return False # 하나라도 방문하지 않은 방이 있다면 false를 return
        return True # false가 안나오고 끝났다면 true를 return
